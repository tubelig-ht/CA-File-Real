package com.tourist.info;


import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.RequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.tourist.info.controller.TouristController;
import com.tourist.info.model.Tourist;
import com.tourist.info.service.TouristService;

//@SpringBootTest
@RunWith(SpringJUnit4ClassRunner.class)
@WebMvcTest(value=TouristController.class)
public class ServiceMockitoTest {
	@Autowired
	private MockMvc mockMvc;
	
	@MockBean
	private TouristService touristService;
	
	@Test
	public void testAddTourist() throws Exception{
		Tourist tourist=new Tourist(101,"demo1","demo1","Male",20,"Pune",3);
		String jsonInput=(new ObjectMapper()).writeValueAsString(tourist);
		
		System.out.println(jsonInput);
		
		Mockito.when(touristService.addTourist(new Tourist())).thenReturn(tourist);
		RequestBuilder requestBuilder=MockMvcRequestBuilders.post("/api/v1/tourists")
				.accept(MediaType.APPLICATION_JSON)
				.content(jsonInput)
				.contentType(MediaType.APPLICATION_JSON);
		MvcResult result=mockMvc.perform(requestBuilder).andReturn();
		System.out.println(result.getResponse().getContentAsString());
		MockHttpServletResponse response=result.getResponse();
		String jsonOutput=response.getContentAsString();
		assertEquals(jsonOutput,jsonInput);
		assertEquals(HttpStatus.OK.value(),response.getStatus());
	}
	
	
	
}
